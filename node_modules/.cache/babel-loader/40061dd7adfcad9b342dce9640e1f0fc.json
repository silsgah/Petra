{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devsi\\\\Documents\\\\Reacts\\\\contact\\\\contact-app\\\\src\\\\components\\\\Planets.js\";\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { List, Avatar, Skeleton } from 'antd';\nconst CONTACTS = gql`\n{\n    contacts {\n      email\n      fname\n      id\n      lname\n      twitter\n    }\n}\n`;\nexport default function Planets() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CONTACTS);\n  const result = [];\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 24\n    }\n  }, \"loading...\");\n  if (error) return console.error(); // eslint-disable-next-line no-const-assign\n\n  result = data;\n  return result.contacts.map(({\n    id,\n    email,\n    fname,\n    lname,\n    twitter\n  }) => /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: data.contacts,\n    key: result.contacts.id,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      actions: [/*#__PURE__*/React.createElement(\"a\", {\n        key: item.id,\n        href: `/contact/${id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 23\n        }\n      }, \"details\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      title: false,\n      loading: item.loading,\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        href: `/contact/${id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }\n      }, item.email),\n      description: fname + \" \" + lname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/devsi/Documents/Reacts/contact/contact-app/src/components/Planets.js"],"names":["React","useQuery","gql","List","Avatar","Skeleton","CONTACTS","Planets","loading","error","data","result","console","contacts","map","id","email","fname","lname","twitter","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,QAAvB,QAAuC,MAAvC;AAEA,MAAMC,QAAQ,GAAGJ,GAAI;;;;;;;;;;CAArB;AAYA,eAAe,SAASK,OAAT,GAAkB;AAC7B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BT,QAAQ,CAACK,QAAD,CAAxC;AACA,QAAMK,MAAM,GAAG,EAAf;AACA,MAAGH,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,MAAGC,KAAH,EAAU,OAAOG,OAAO,CAACH,KAAR,EAAP,CAJmB,CAK7B;;AACAE,EAAAA,MAAM,GAAGD,IAAT;AACA,SAAOC,MAAM,CAACE,QAAP,CAAgBC,GAAhB,CAAoB,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,GAAD,kBAC3B,oBAAC,IAAD;AACA,IAAA,UAAU,EAAC,YADX;AAEA,IAAA,UAAU,EAAET,IAAI,CAACG,QAFjB;AAGA,IAAA,GAAG,EAAEF,MAAM,CAACE,QAAP,CAAgBE,EAHrB;AAIA,IAAA,UAAU,EAAEK,IAAI,iBACZ,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,OAAO,EAAE,cAAC;AAAG,QAAA,GAAG,EAAEA,IAAI,CAACL,EAAb;AAAiB,QAAA,IAAI,EAAG,YAAWA,EAAG,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,KAAK,EAAE,KAAxB;AAA+B,MAAA,OAAO,EAAEK,IAAI,CAACZ,OAA7C;AAAsD,MAAA,MAAM,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,eACJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAIE,MAAA,KAAK,eAAE;AAAG,QAAA,IAAI,EAAG,YAAWO,EAAG,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BK,IAAI,CAACJ,KAAjC,CAJT;AAKE,MAAA,WAAW,EAAEC,KAAK,GAAG,GAAR,GAAcC,KAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHJ,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAP;AAsBH","sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { List, Avatar, Skeleton } from 'antd';\r\n\r\nconst CONTACTS = gql`\r\n{\r\n    contacts {\r\n      email\r\n      fname\r\n      id\r\n      lname\r\n      twitter\r\n    }\r\n}\r\n`;\r\n\r\nexport default function Planets(){\r\n    const {loading, error, data } = useQuery(CONTACTS);\r\n    const result = [];\r\n    if(loading) return <p>loading...</p>\r\n    if(error) return console.error()\r\n    // eslint-disable-next-line no-const-assign\r\n    result = data;\r\n    return result.contacts.map(({id, email, fname, lname, twitter }) => (\r\n    <List\r\n    itemLayout=\"horizontal\"\r\n    dataSource={data.contacts}\r\n    key={result.contacts.id}\r\n    renderItem={item => (\r\n        <List.Item\r\n            actions={[<a key={item.id} href={`/contact/${id}`}>details</a>]}\r\n          >\r\n            <Skeleton avatar title={false} loading={item.loading} active>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                }\r\n                title={<a href={`/contact/${id}`}>{item.email}</a>}\r\n                description={fname + \" \" + lname} \r\n              />\r\n            </Skeleton>\r\n          </List.Item>\r\n    )}\r\n   />\r\n    ));\r\n}"]},"metadata":{},"sourceType":"module"}