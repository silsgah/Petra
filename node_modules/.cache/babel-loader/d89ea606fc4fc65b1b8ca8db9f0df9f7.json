{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devsi\\\\Documents\\\\Reacts\\\\contact\\\\contact-app\\\\src\\\\components\\\\Details.js\";\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, gql } from '@apollo/client';\nimport { Form, Input, Button } from 'antd';\nconst Detail = gql`\nquery Contact($id: Int!) {\n    contacts_by_pk(id: $id) {\n      email\n      fname\n      id\n      lname\n      twitter\n    }\n  }\n`;\nconst UPDATE_CONTACT = gql`\nmutation UpdateContact($id: Int!,$fname: String!,$lname: String!,$email: String!, $twitter: String) {\n    update_contacts_by_pk(_set: {email: $email, fname: $fname, lname: $lname, twitter: $twitter}, pk_columns: {id: $id}) {\n      email\n      fname\n      lname\n      twitter\n    }\n  }\n`;\n\nconst Details = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const [setInputVal] = useState({\n    selectedI: \"\"\n  });\n  const [addContact] = useMutation(UPDATE_CONTACT);\n  const [form] = Form.useForm();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Detail, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }, \"fetching data...\");\n  if (error) return console.error();\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onFinish = values => {\n    addContact({\n      variables: {\n        id: 3,\n        fname: values.user.fname,\n        lname: values.user.lname,\n        email: values.user.email\n      }\n    }).then(() => setInputVal(\"\")).catch(e => {\n      setInputVal(e.message);\n      onReset();\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const {\n    email,\n    fname,\n    lname,\n    twitter\n  } = data.contacts_by_pk;\n  return /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    form: form,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    initialValues: {\n      remember: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"First Name\",\n    name: ['user', 'fname'],\n    key: 1,\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Contact First Name\",\n    defaultValue: fname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Last Name\",\n    name: ['user', 'lname'],\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Contact Last Name\",\n    defaultValue: lname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'email'],\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true,\n      message: 'Please input your last email!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Twitter\",\n    name: ['user', 'twitter'],\n    key: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: twitter,\n    placeholder: \"Twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  }, \"Submit\")));\n};\n\nexport default Details;","map":{"version":3,"sources":["C:/Users/devsi/Documents/Reacts/contact/contact-app/src/components/Details.js"],"names":["React","useState","useMutation","useQuery","gql","Form","Input","Button","Detail","UPDATE_CONTACT","Details","match","params","id","setInputVal","selectedI","addContact","form","useForm","loading","error","data","variables","console","layout","labelCol","span","wrapperCol","tailLayout","offset","onReset","resetFields","onFinish","values","fname","user","lname","email","then","catch","e","message","onFinishFailed","errorInfo","log","twitter","contacts_by_pk","remember","required","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation, useQuery, gql } from '@apollo/client';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst Detail = gql`\r\nquery Contact($id: Int!) {\r\n    contacts_by_pk(id: $id) {\r\n      email\r\n      fname\r\n      id\r\n      lname\r\n      twitter\r\n    }\r\n  }\r\n`;\r\nconst UPDATE_CONTACT = gql`\r\nmutation UpdateContact($id: Int!,$fname: String!,$lname: String!,$email: String!, $twitter: String) {\r\n    update_contacts_by_pk(_set: {email: $email, fname: $fname, lname: $lname, twitter: $twitter}, pk_columns: {id: $id}) {\r\n      email\r\n      fname\r\n      lname\r\n      twitter\r\n    }\r\n  }\r\n`;\r\nconst Details = ({\r\n    match:{\r\n        params: { id },\r\n    },\r\n}) => {\r\n    const [setInputVal] = useState({selectedI:\"\"});\r\n    const [addContact] = useMutation(UPDATE_CONTACT);\r\n    const [form] = Form.useForm();\r\n    const { loading, error, data } = useQuery(Detail, { variables: {id} });\r\n    if(loading) return <p>fetching data...</p>\r\n    if(error) return console.error();\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n      };\r\n      const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 },\r\n      };\r\n     const onReset = () => {\r\n        form.resetFields();\r\n     };\r\n     const onFinish = values => {\r\n        addContact({ variables: {id:3,fname: values.user.fname, lname: values.user.lname, email: values.user.email }})\r\n        .then(() => setInputVal(\"\"))\r\n            .catch((e) => {\r\n              setInputVal(e.message);\r\n               onReset();\r\n            });\r\n    };\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const { email, fname, lname, twitter } = data.contacts_by_pk;\r\n    return (\r\n        <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        form={form}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        initialValues={{ remember: true}}\r\n      >\r\n        <Form.Item\r\n          label=\"First Name\"\r\n          name={['user', 'fname']} \r\n          key={1}\r\n          rules={[{ required: true, message: 'Please input your first name!' }]}\r\n        ><Input placeholder=\"Contact First Name\" defaultValue={fname} />\r\n         </Form.Item>\r\n        <Form.Item \r\n        label=\"Last Name\"\r\n        name={['user', 'lname']}\r\n        rules={[{ required: true, message: 'Please input your last name!' }]}>\r\n         <Input placeholder=\"Contact Last Name\" defaultValue={lname}/>\r\n        </Form.Item>\r\n        <Form.Item \r\n        name={['user', 'email']} \r\n        label=\"Email\" \r\n        rules={[{ type: 'email',required: true, message: 'Please input your last email!' }]}>\r\n         <Input defaultValue={email}/>\r\n        </Form.Item>\r\n         <Form.Item\r\n          label=\"Twitter\"\r\n          name={['user', 'twitter']} \r\n          key={4}\r\n        ><Input defaultValue={twitter} placeholder=\"Twitter\"/>\r\n         </Form.Item>\r\n         <Form.Item {...tailLayout}>\r\n         <Button type=\"primary\" htmlType=\"submit\">\r\n           Submit\r\n         </Button>\r\n       </Form.Item>\r\n      </Form>\r\n    )\r\n};\r\n\r\nexport default Details;"]},"metadata":{},"sourceType":"module"}