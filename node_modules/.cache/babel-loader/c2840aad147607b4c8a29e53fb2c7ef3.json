{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devsi\\\\Documents\\\\Reacts\\\\contact\\\\contact-app\\\\src\\\\components\\\\AddContact.js\";\nimport React, { useState } from 'react';\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Form, Input, Button } from 'antd';\nconst ADD_CONTACT = gql`\nmutation ($email: Stting!, $fname: String!, $lname: String!) {\n    AddContact(email: $email, fname: $fname, lname: $lname) {\n      affected_rows\n    }\n  }\n`;\n\nconst AddContact = () => {\n  const [inputVal, setInputVal] = useState(\"\");\n  const [form] = Form.useForm();\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const [addContact] = useMutation(ADD_CONTACT);\n  return /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    initialValues: {\n      remember: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"First Name\",\n    name: \"fname\",\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Last Name\",\n    name: \"lname\",\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: 'Please input your email!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Twitter\",\n    name: \"twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"button\",\n    onClick: onReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Reset\")));\n};\n\nexport default AddContact;","map":{"version":3,"sources":["C:/Users/devsi/Documents/Reacts/contact/contact-app/src/components/AddContact.js"],"names":["React","useState","useMutation","gql","Form","Input","Button","ADD_CONTACT","AddContact","inputVal","setInputVal","form","useForm","layout","labelCol","span","wrapperCol","tailLayout","offset","onReset","resetFields","onFinish","values","console","log","onFinishFailed","errorInfo","addContact","remember","required","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {useMutation, gql } from \"@apollo/client\";\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst ADD_CONTACT = gql`\r\nmutation ($email: Stting!, $fname: String!, $lname: String!) {\r\n    AddContact(email: $email, fname: $fname, lname: $lname) {\r\n      affected_rows\r\n    }\r\n  }\r\n`;\r\nconst AddContact = () => {\r\n    const [inputVal, setInputVal] = useState(\"\");\r\n    const [form] = Form.useForm();\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n      };\r\n      const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 },\r\n      };\r\n      const onReset = () => {\r\n        form.resetFields();\r\n      };\r\n      const onFinish = values => {\r\n        console.log('Success:', values);\r\n      };\r\n      const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n      const [addContact] = useMutation(ADD_CONTACT);\r\n    return (\r\n    <Form\r\n       {...layout}\r\n       name=\"basic\"\r\n       onFinish={onFinish}\r\n       onFinishFailed={onFinishFailed}\r\n       initialValues={{ remember: true }}\r\n     >\r\n       <Form.Item\r\n         label=\"First Name\"\r\n         name=\"fname\"\r\n         rules={[{ required: true, message: 'Please input your first name!' }]}\r\n       ><Input />\r\n       </Form.Item>\r\n       <Form.Item\r\n         label=\"Last Name\"\r\n         name=\"lname\"\r\n         rules={[{ required: true, message: 'Please input your last name!' }]}\r\n       > <Input />\r\n       </Form.Item>\r\n       <Form.Item\r\n         label=\"Email\"\r\n         name=\"email\"\r\n         rules={[{ required: true, message: 'Please input your email!' }]}\r\n       > <Input />\r\n       </Form.Item>\r\n        <Form.Item\r\n         label=\"Twitter\"\r\n         name=\"twitter\"\r\n       ><Input />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button htmlType=\"button\" onClick={onReset}>\r\n          Reset\r\n        </Button>\r\n      </Form.Item>\r\n     </Form>\r\n    )\r\n};\r\n\r\n\r\nexport default AddContact;"]},"metadata":{},"sourceType":"module"}