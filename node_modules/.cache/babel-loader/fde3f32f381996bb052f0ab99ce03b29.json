{"ast":null,"code":"import { __extends, __assign } from 'tslib';\nimport { addTypenameToDocument } from '../../utilities/graphql/transform.js';\nimport { dep, wrap } from 'optimism';\nimport { ApolloCache } from '../core/cache.js';\nimport { Policies, defaultDataIdFromObject } from './policies.js';\nimport { EntityStore, supportsResultCaching } from './entityStore.js';\nimport { StoreReader } from './readFromStore.js';\nimport { StoreWriter } from './writeToStore.js';\nvar defaultConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  typePolicies: {}\n};\n\nvar InMemoryCache = function (_super) {\n  __extends(InMemoryCache, _super);\n\n  function InMemoryCache(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.watches = new Set();\n    _this.typenameDocumentCache = new Map();\n    _this.txCount = 0;\n    _this.varDep = dep();\n    _this.config = __assign(__assign({}, defaultConfig), config);\n    _this.addTypename = !!_this.config.addTypename;\n    _this.policies = new Policies({\n      dataIdFromObject: _this.config.dataIdFromObject,\n      possibleTypes: _this.config.possibleTypes,\n      typePolicies: _this.config.typePolicies\n    });\n    _this.data = new EntityStore.Root({\n      policies: _this.policies,\n      resultCaching: _this.config.resultCaching\n    });\n    _this.optimisticData = _this.data;\n    _this.storeWriter = new StoreWriter({\n      policies: _this.policies,\n      reader: _this.storeReader = new StoreReader({\n        addTypename: _this.addTypename,\n        policies: _this.policies\n      })\n    });\n    var cache = _this;\n    var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n    _this.maybeBroadcastWatch = wrap(function (c) {\n      return maybeBroadcastWatch.call(_this, c);\n    }, {\n      makeCacheKey: function (c) {\n        var store = c.optimistic ? cache.optimisticData : cache.data;\n\n        if (supportsResultCaching(store)) {\n          var optimistic = c.optimistic,\n              rootId = c.rootId,\n              variables = c.variables;\n          return store.makeCacheKey(c.query, c.callback, JSON.stringify({\n            optimistic: optimistic,\n            rootId: rootId,\n            variables: variables\n          }));\n        }\n      }\n    });\n    return _this;\n  }\n\n  InMemoryCache.prototype.restore = function (data) {\n    if (data) this.data.replace(data);\n    return this;\n  };\n\n  InMemoryCache.prototype.extract = function (optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return (optimistic ? this.optimisticData : this.data).toObject();\n  };\n\n  InMemoryCache.prototype.read = function (options) {\n    var store = options.optimistic ? this.optimisticData : this.data;\n\n    if (typeof options.rootId === 'string' && !store.has(options.rootId)) {\n      return null;\n    }\n\n    return this.storeReader.readQueryFromStore({\n      store: store,\n      query: options.query,\n      variables: options.variables,\n      rootId: options.rootId,\n      config: this.config\n    }) || null;\n  };\n\n  InMemoryCache.prototype.write = function (options) {\n    this.storeWriter.writeQueryToStore({\n      store: this.data,\n      query: options.query,\n      result: options.result,\n      dataId: options.dataId,\n      variables: options.variables\n    });\n\n    if (options.broadcast !== false) {\n      this.broadcastWatches();\n    }\n  };\n\n  InMemoryCache.prototype.diff = function (options) {\n    return this.storeReader.diffQueryAgainstStore({\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      query: options.query,\n      variables: options.variables,\n      returnPartialData: options.returnPartialData,\n      config: this.config\n    });\n  };\n\n  InMemoryCache.prototype.watch = function (watch) {\n    var _this = this;\n\n    this.watches.add(watch);\n\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n\n    return function () {\n      _this.watches.delete(watch);\n    };\n  };\n\n  InMemoryCache.prototype.gc = function () {\n    return this.optimisticData.gc();\n  };\n\n  InMemoryCache.prototype.retain = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  };\n\n  InMemoryCache.prototype.release = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  };\n\n  InMemoryCache.prototype.identify = function (object) {\n    return this.policies.identify(object)[0];\n  };\n\n  InMemoryCache.prototype.evict = function (idOrOptions, fieldName, args) {\n    var evicted = this.optimisticData.evict(typeof idOrOptions === \"string\" ? {\n      id: idOrOptions,\n      fieldName: fieldName,\n      args: args\n    } : idOrOptions);\n\n    if (typeof idOrOptions === \"string\" || idOrOptions.broadcast !== false) {\n      this.broadcastWatches();\n    }\n\n    return evicted;\n  };\n\n  InMemoryCache.prototype.reset = function () {\n    this.data.clear();\n    this.optimisticData = this.data;\n    this.broadcastWatches();\n    return Promise.resolve();\n  };\n\n  InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n    var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  };\n\n  InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n    var _this = this;\n\n    var perform = function (layer) {\n      var _a = _this,\n          data = _a.data,\n          optimisticData = _a.optimisticData;\n      ++_this.txCount;\n\n      if (layer) {\n        _this.data = _this.optimisticData = layer;\n      }\n\n      try {\n        transaction(_this);\n      } finally {\n        --_this.txCount;\n        _this.data = data;\n        _this.optimisticData = optimisticData;\n      }\n    };\n\n    if (typeof optimisticId === 'string') {\n      this.optimisticData = this.optimisticData.addLayer(optimisticId, perform);\n    } else {\n      perform();\n    }\n\n    this.broadcastWatches();\n  };\n\n  InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n    return this.performTransaction(transaction, id);\n  };\n\n  InMemoryCache.prototype.transformDocument = function (document) {\n    if (this.addTypename) {\n      var result = this.typenameDocumentCache.get(document);\n\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        this.typenameDocumentCache.set(result, result);\n      }\n\n      return result;\n    }\n\n    return document;\n  };\n\n  InMemoryCache.prototype.broadcastWatches = function () {\n    var _this = this;\n\n    if (!this.txCount) {\n      this.watches.forEach(function (c) {\n        return _this.maybeBroadcastWatch(c);\n      });\n    }\n  };\n\n  InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n    c.callback(this.diff({\n      query: c.query,\n      variables: c.variables,\n      optimistic: c.optimistic\n    }));\n  };\n\n  InMemoryCache.prototype.makeVar = function (value) {\n    var cache = this;\n    return function rv(newValue) {\n      if (arguments.length > 0) {\n        if (value !== newValue) {\n          value = newValue;\n          cache.varDep.dirty(rv);\n          cache.broadcastWatches();\n        }\n      } else {\n        cache.varDep(rv);\n      }\n\n      return value;\n    };\n  };\n\n  return InMemoryCache;\n}(ApolloCache);\n\nexport { InMemoryCache };","map":{"version":3,"sources":["inMemoryCache.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport './fixPolyfills';\nimport { dep, wrap } from 'optimism';\nimport { ApolloCache } from '../core/cache';\nimport { addTypenameToDocument } from '../../utilities/graphql/transform';\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { EntityStore, supportsResultCaching } from './entityStore';\nimport { defaultDataIdFromObject, Policies, } from './policies';\nvar defaultConfig = {\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    typePolicies: {},\n};\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.txCount = 0;\n        _this.varDep = dep();\n        _this.config = __assign(__assign({}, defaultConfig), config);\n        _this.addTypename = !!_this.config.addTypename;\n        _this.policies = new Policies({\n            dataIdFromObject: _this.config.dataIdFromObject,\n            possibleTypes: _this.config.possibleTypes,\n            typePolicies: _this.config.typePolicies,\n        });\n        _this.data = new EntityStore.Root({\n            policies: _this.policies,\n            resultCaching: _this.config.resultCaching,\n        });\n        _this.optimisticData = _this.data;\n        _this.storeWriter = new StoreWriter({\n            policies: _this.policies,\n            reader: _this.storeReader = new StoreReader({\n                addTypename: _this.addTypename,\n                policies: _this.policies,\n            }),\n        });\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                var store = c.optimistic ? cache.optimisticData : cache.data;\n                if (supportsResultCaching(store)) {\n                    var optimistic = c.optimistic, rootId = c.rootId, variables = c.variables;\n                    return store.makeCacheKey(c.query, c.callback, JSON.stringify({ optimistic: optimistic, rootId: rootId, variables: variables }));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).toObject();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        var store = options.optimistic ? this.optimisticData : this.data;\n        if (typeof options.rootId === 'string' && !store.has(options.rootId)) {\n            return null;\n        }\n        return this.storeReader.readQueryFromStore({\n            store: store,\n            query: options.query,\n            variables: options.variables,\n            rootId: options.rootId,\n            config: this.config,\n        }) || null;\n    };\n    InMemoryCache.prototype.write = function (options) {\n        this.storeWriter.writeQueryToStore({\n            store: this.data,\n            query: options.query,\n            result: options.result,\n            dataId: options.dataId,\n            variables: options.variables,\n        });\n        if (options.broadcast !== false) {\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.diff = function (options) {\n        return this.storeReader.diffQueryAgainstStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            rootId: options.id || \"ROOT_QUERY\",\n            query: options.query,\n            variables: options.variables,\n            returnPartialData: options.returnPartialData,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        if (watch.immediate) {\n            this.maybeBroadcastWatch(watch);\n        }\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.gc = function () {\n        return this.optimisticData.gc();\n    };\n    InMemoryCache.prototype.retain = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).retain(rootId);\n    };\n    InMemoryCache.prototype.release = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).release(rootId);\n    };\n    InMemoryCache.prototype.identify = function (object) {\n        return this.policies.identify(object)[0];\n    };\n    InMemoryCache.prototype.evict = function (idOrOptions, fieldName, args) {\n        var evicted = this.optimisticData.evict(typeof idOrOptions === \"string\" ? {\n            id: idOrOptions,\n            fieldName: fieldName,\n            args: args,\n        } : idOrOptions);\n        if (typeof idOrOptions === \"string\" ||\n            idOrOptions.broadcast !== false) {\n            this.broadcastWatches();\n        }\n        return evicted;\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.optimisticData = this.data;\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n        if (newOptimisticData !== this.optimisticData) {\n            this.optimisticData = newOptimisticData;\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _this = this;\n        var perform = function (layer) {\n            var _a = _this, data = _a.data, optimisticData = _a.optimisticData;\n            ++_this.txCount;\n            if (layer) {\n                _this.data = _this.optimisticData = layer;\n            }\n            try {\n                transaction(_this);\n            }\n            finally {\n                --_this.txCount;\n                _this.data = data;\n                _this.optimisticData = optimisticData;\n            }\n        };\n        if (typeof optimisticId === 'string') {\n            this.optimisticData = this.optimisticData.addLayer(optimisticId, perform);\n        }\n        else {\n            perform();\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        return this.performTransaction(transaction, id);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.txCount) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c); });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            optimistic: c.optimistic,\n        }));\n    };\n    InMemoryCache.prototype.makeVar = function (value) {\n        var cache = this;\n        return function rv(newValue) {\n            if (arguments.length > 0) {\n                if (value !== newValue) {\n                    value = newValue;\n                    cache.varDep.dirty(rv);\n                    cache.broadcastWatches();\n                }\n            }\n            else {\n                cache.varDep(rv);\n            }\n            return value;\n        };\n    };\n    return InMemoryCache;\n}(ApolloCache));\nexport { InMemoryCache };\n//# sourceMappingURL=inMemoryCache.js.map"]},"metadata":{},"sourceType":"module"}