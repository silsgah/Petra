{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devsi\\\\Documents\\\\Reacts\\\\contact\\\\contact-app\\\\src\\\\components\\\\Planets.js\";\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { List, Avatar, Button, Skeleton } from 'antd';\nconst CONTACTS = gql`\n{\n    contacts {\n      email\n      fname\n      id\n      lname\n      twitter\n    }\n}\n`;\nexport default function Planets() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CONTACTS);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 24\n    }\n  }, \"fetching data...\");\n  if (error) return console.error();\n  const result = data.contacts;\n  return result.map(({\n    id,\n    email,\n    fname,\n    lname,\n    twitter\n  }) => /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: data.contacts,\n    key: data.contacts.id,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      actions: [/*#__PURE__*/React.createElement(\"a\", {\n        key: item.id,\n        href: `/contact/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 23\n        }\n      }, \"details\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      title: true,\n      loading: item.loading,\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        href: `/contact/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }\n      }, item.email),\n      description: item.fname + \" \" + item.lname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/devsi/Documents/Reacts/contact/contact-app/src/components/Planets.js"],"names":["React","useQuery","gql","List","Avatar","Button","Skeleton","CONTACTS","Planets","loading","error","data","console","result","contacts","map","id","email","fname","lname","twitter","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,QAA+C,MAA/C;AAEA,MAAMC,QAAQ,GAAGL,GAAI;;;;;;;;;;CAArB;AAYA,eAAe,SAASM,OAAT,GAAkB;AAC7B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BV,QAAQ,CAACM,QAAD,CAAxC;AACA,MAAGE,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACZ,MAAGC,KAAH,EAAU,OAAOE,OAAO,CAACF,KAAR,EAAP;AACV,QAAMG,MAAM,GAAGF,IAAI,CAACG,QAApB;AACA,SAAOD,MAAM,CAACE,GAAP,CAAW,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,GAAD,kBAClB,oBAAC,IAAD;AACA,IAAA,UAAU,EAAC,YADX;AAEA,IAAA,UAAU,EAAET,IAAI,CAACG,QAFjB;AAGA,IAAA,GAAG,EAAEH,IAAI,CAACG,QAAL,CAAcE,EAHnB;AAIA,IAAA,UAAU,EAAEK,IAAI,iBACZ,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,OAAO,EAAE,cAAC;AAAG,QAAA,GAAG,EAAEA,IAAI,CAACL,EAAb;AAAiB,QAAA,IAAI,EAAG,YAAWK,IAAI,CAACL,EAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,KAAK,EAAE,IAAxB;AAA8B,MAAA,OAAO,EAAEK,IAAI,CAACZ,OAA5C;AAAqD,MAAA,MAAM,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,eACJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAIE,MAAA,KAAK,eAAE;AAAG,QAAA,IAAI,EAAG,YAAWY,IAAI,CAACL,EAAG,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCK,IAAI,CAACJ,KAAtC,CAJT;AAKE,MAAA,WAAW,EAAEI,IAAI,CAACH,KAAL,GAAa,GAAb,GAAmBG,IAAI,CAACF,KALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHJ,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAP;AAsBH","sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { List, Avatar, Button, Skeleton } from 'antd';\r\n\r\nconst CONTACTS = gql`\r\n{\r\n    contacts {\r\n      email\r\n      fname\r\n      id\r\n      lname\r\n      twitter\r\n    }\r\n}\r\n`;\r\n\r\nexport default function Planets(){\r\n    const {loading, error, data } = useQuery(CONTACTS);\r\n    if(loading) return <p>fetching data...</p>\r\n    if(error) return console.error()\r\n    const result = data.contacts; \r\n    return result.map(({id, email, fname, lname, twitter }) => (\r\n    <List\r\n    itemLayout=\"horizontal\"\r\n    dataSource={data.contacts}\r\n    key={data.contacts.id}\r\n    renderItem={item => (\r\n        <List.Item\r\n            actions={[<a key={item.id} href={`/contact/${item.id}`}>details</a>]}\r\n          >\r\n            <Skeleton avatar title={true} loading={item.loading} active>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                }\r\n                title={<a href={`/contact/${item.id}`}>{item.email}</a>}\r\n                description={item.fname + \" \" + item.lname} \r\n              />\r\n            </Skeleton>\r\n          </List.Item>\r\n    )}\r\n   />\r\n    ));\r\n}"]},"metadata":{},"sourceType":"module"}