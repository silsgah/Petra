{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devsi\\\\Documents\\\\Reacts\\\\contact\\\\contact-app\\\\src\\\\components\\\\Planets.js\";\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { List, Avatar, Skeleton } from 'antd';\nconst CONTACTS = gql`\n{\n    contacts {\n      email\n      fname\n      id\n      lname\n      twitter\n    }\n}\n`;\nexport default function Planets() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CONTACTS);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 24\n    }\n  }, \"loading...\");\n  if (error) return console.error();\n  return data.contacts.map(({\n    id,\n    email,\n    fname,\n    lname,\n    twitter\n  }) => /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: data.contacts,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      actions: [/*#__PURE__*/React.createElement(\"a\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 23\n        }\n      }, \"edit\"), /*#__PURE__*/React.createElement(\"a\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 50\n        }\n      }, \"more\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      title: false,\n      loading: item.loading,\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://ant.design\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }\n      }, item.email),\n      description: \"Ant Design, a design language for background applications, is refined by Ant UED Team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"content\"))) //   <List.Item>\n    //       key={item.id}\n    //       avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n    //       title={<a href=\"https://ant.design\">{item.email}</a>}\n    //       description= {fname + \"-\" + lname} \n    //     />\n    //   </List.Item>\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }));\n}\n{\n  /* <Link to={`/contact/${id}`}>\r\n  {email} | {fname}\r\n  </Link> */\n}","map":{"version":3,"sources":["C:/Users/devsi/Documents/Reacts/contact/contact-app/src/components/Planets.js"],"names":["React","useQuery","gql","Link","List","Avatar","Skeleton","CONTACTS","Planets","loading","error","data","console","contacts","map","id","email","fname","lname","twitter","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,QAAvB,QAAuC,MAAvC;AAEA,MAAMC,QAAQ,GAAGL,GAAI;;;;;;;;;;CAArB;AAYA,eAAe,SAASM,OAAT,GAAkB;AAC7B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BV,QAAQ,CAACM,QAAD,CAAxC;AACA,MAAGE,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,MAAGC,KAAH,EAAU,OAAOE,OAAO,CAACF,KAAR,EAAP;AACV,SAAOC,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkB,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,GAAD,kBACzB,oBAAC,IAAD;AACA,IAAA,UAAU,EAAC,YADX;AAEA,IAAA,UAAU,EAAER,IAAI,CAACE,QAFjB;AAGA,IAAA,UAAU,EAAEO,IAAI,iBACZ,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,OAAO,EAAE,cAAC;AAAG,QAAA,GAAG,EAAEA,IAAI,CAACL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAD,eAA4B;AAAG,QAAA,GAAG,EAAEK,IAAI,CAACL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,KAAK,EAAE,KAAxB;AAA+B,MAAA,OAAO,EAAEK,IAAI,CAACX,OAA7C;AAAsD,MAAA,MAAM,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,eACJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAIE,MAAA,KAAK,eAAE;AAAG,QAAA,IAAI,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BW,IAAI,CAACJ,KAAnC,CAJT;AAKE,MAAA,WAAW,EAAC,uFALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CAHJ,CADY,CAehB;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAP;AA6BH;AAED;AAAC;;;AAEU","sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Avatar, Skeleton } from 'antd';\r\n\r\nconst CONTACTS = gql`\r\n{\r\n    contacts {\r\n      email\r\n      fname\r\n      id\r\n      lname\r\n      twitter\r\n    }\r\n}\r\n`;\r\n\r\nexport default function Planets(){\r\n    const {loading, error, data } = useQuery(CONTACTS);\r\n    if(loading) return <p>loading...</p>\r\n    if(error) return console.error()\r\n    return data.contacts.map(({id, email, fname, lname, twitter }) => (\r\n    <List\r\n    itemLayout=\"horizontal\"\r\n    dataSource={data.contacts}\r\n    renderItem={item => (\r\n        <List.Item\r\n            actions={[<a key={item.id}>edit</a>, <a key={item.id}>more</a>]}\r\n          >\r\n            <Skeleton avatar title={false} loading={item.loading} active>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                }\r\n                title={<a href=\"https://ant.design\">{item.email}</a>}\r\n                description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n              />\r\n              <div>content</div>\r\n            </Skeleton>\r\n          </List.Item>\r\n    //   <List.Item>\r\n    //       key={item.id}\r\n    //       avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n    //       title={<a href=\"https://ant.design\">{item.email}</a>}\r\n    //       description= {fname + \"-\" + lname} \r\n    //     />\r\n    //   </List.Item>\r\n    )}\r\n   />\r\n    ));\r\n}\r\n\r\n{/* <Link to={`/contact/${id}`}>\r\n{email} | {fname}\r\n</Link> */}"]},"metadata":{},"sourceType":"module"}